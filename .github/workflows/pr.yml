name: 🎆 PR
on: [pull_request]

jobs:
  build:
    name: 🏗️ Build
    environment: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: ./.github/workflows/base-setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        run: task frontend:build

  unit-test-go:
    name: 🧪 Go:Unit Test
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - uses: ./.github/workflows/base-setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Test
        run: task go:test:unit
  
  unit-test-js:
    name: 🧪 JS:Unit Test
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
      
      - uses: ./.github/workflows/base-setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Test
        run: task frontend:test:unit

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: 🧪 Vitest
          path: frontend/results/report.xml

          reporter: jest-junit

      - name: Code Coverage Report
        if: success() || failure()
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: frontend/results/cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          output: both
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: success() || failure()
        with:
          recreate: true
          path: code-coverage-results.md

  # e2e-test:
  #   name: 🧪 E2E Test
  #   runs-on: ubuntu-latest
  #   env:
  #     NODE_ENV: testing
  #   steps:
  #     - uses: actions/checkout@v3
     
  #     - uses: ./.github/workflows/base-setup
  #       with:
  #         token: ${{ secrets.GITHUB_TOKEN }}
 
  #     - name: Test E2E
  #       run: task frontend:test:e2e

  #     - name: Test Report
  #       uses: dorny/test-reporter@v1
  #       if: success() || failure() # run this step even if previous step failed
  #       with:
  #         name: 🧪 Cypress
  #         path: results/*.xml
  #         reporter: jest-junit

  check:
    name: ✅ Check
    environment: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: ./.github/workflows/base-setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Setup matcher
        run: echo "::add-matcher::.github/actions/problemMatcher.json"

      - name: Check
        run: task frontend:check:ci

  lint:
    name: 🧹 Lint
    environment: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/workflows/base-setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Check lint
        run: task frontend:lint
  
  bundle-size:
    name: 📦 Bundle size
    environment: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/workflows/base-setup
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Check bundle size
        run: task frontend:check:bundle